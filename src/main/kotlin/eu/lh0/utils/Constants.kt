package eu.lh0.utils

import eu.lh0.game.Vector
import java.awt.Dimension

val FRAME_DIMENSION = Dimension(1800, 1013)
val PLAYING_FIELD_DIMENSION = Dimension(1500, 750)

val PLAYING_FIELD_ORIGIN = Vector((FRAME_DIMENSION.width - PLAYING_FIELD_DIMENSION.width) / 2, (FRAME_DIMENSION.height - PLAYING_FIELD_DIMENSION.height) / 2)

const val LEFT_WALL_RELATIVE = 0
val LEFT_WALL = PLAYING_FIELD_ORIGIN.x + LEFT_WALL_RELATIVE
val RIGHT_WALL_RELATIVE = PLAYING_FIELD_DIMENSION.width
val RIGHT_WALL = PLAYING_FIELD_ORIGIN.x + RIGHT_WALL_RELATIVE
const val UPPER_WALL_RELATIVE = 0
val UPPER_WALL = PLAYING_FIELD_ORIGIN.y + UPPER_WALL_RELATIVE
val LOWER_WALL_RELATIVE = PLAYING_FIELD_DIMENSION.height
val LOWER_WALL = PLAYING_FIELD_ORIGIN.y + LOWER_WALL_RELATIVE

const val PUFFER_ZONE_SIZE = 15
const val HOLE_SIZE = 72
const val BALL_HEIGHT_WIDTH = 41

val holes: Array<Vector> = arrayOf(
    Vector(LEFT_WALL_RELATIVE - PUFFER_ZONE_SIZE, UPPER_WALL_RELATIVE - PUFFER_ZONE_SIZE), //left-up
    Vector(FRAME_DIMENSION.width.toDouble() / 2, (UPPER_WALL_RELATIVE - PUFFER_ZONE_SIZE).toDouble()), //middle-up
    Vector(RIGHT_WALL_RELATIVE + PUFFER_ZONE_SIZE, UPPER_WALL_RELATIVE - PUFFER_ZONE_SIZE), //right-up
    Vector(LEFT_WALL_RELATIVE - PUFFER_ZONE_SIZE, LOWER_WALL_RELATIVE + PUFFER_ZONE_SIZE), //left-down
    Vector(FRAME_DIMENSION.width.toDouble() / 2, (LOWER_WALL_RELATIVE + PUFFER_ZONE_SIZE).toDouble()), //middle-down
    Vector(RIGHT_WALL_RELATIVE + PUFFER_ZONE_SIZE, LOWER_WALL_RELATIVE + PUFFER_ZONE_SIZE), //right-down
)

val WHITE_BALL_START_LOCATION = Vector(LEFT_WALL + PLAYING_FIELD_DIMENSION.width.toDouble() / 4, FRAME_DIMENSION.height.toDouble() / 2)

const val RES_DIRECTORY = "./src/main/resources"